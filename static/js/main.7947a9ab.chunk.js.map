{"version":3,"sources":["components/Header.module.css","components/UserProfile.module.css","store/counter.js","components/Counter.js","store/auth.js","components/Header.js","components/UserProfile.js","components/Auth.js","App.js","store/index.js","index.js","components/Auth.module.css","components/Counter.module.css"],"names":["module","exports","counterSlice","createSlice","name","initialState","counter","isDisplayed","reducers","increment","state","increase","action","payload","decrement","toggle","counterActions","actions","Counter","dispatch","useDispatch","useSelector","className","classes","value","onClick","authSlice","isAuthenticated","login","logout","authActions","Header","isAuth","auth","header","href","UserProfile","profile","Auth","onSubmit","e","preventDefault","control","htmlFor","type","id","App","store","configureStore","reducer","counterReducer","authReducer","ReactDOM","createRoot","document","getElementById","render"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,QAAU,+B,4GCMtBC,EAAeC,YAAY,CAC/BC,KAAM,UACNC,aAP0B,CAC1BC,QAAS,EACTC,aAAa,GAMbC,SAAU,CACRC,UADQ,SACEC,GACRA,EAAMJ,WAERK,SAJQ,SAICD,EAAOE,GACdF,EAAMJ,SAAWM,EAAOC,SAE1BC,UAPQ,SAOEJ,GACRA,EAAMJ,WAERS,OAVQ,SAUDL,GACLA,EAAMH,aAAeG,EAAMH,gBAKpBS,EAAiBd,EAAae,QAE5Bf,IAAf,Q,uBCWegB,EAlCC,WACd,IAAMC,EAAWC,cACjB,EAAiCC,aAAY,SAACX,GAAD,OAAWA,EAAMJ,WAAtDA,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,YAkBjB,OACE,uBAAMe,UAAWC,IAAQjB,QAAzB,UACE,+CACA,qBAAKgB,UAAWC,IAAQC,MAAxB,SAAgCjB,GAAeD,IAC/C,gCACE,wBAAQmB,QATW,WACvBN,EAASH,EAAeF,cAQpB,yBACA,wBAAQW,QAdU,WACtBN,EAASH,EAAeL,SAAS,KAa7B,mBACA,wBAAQc,QAnBW,WACvBN,EAASH,EAAeP,cAkBpB,4BAEF,wBAAQgB,QAzBiB,WAC3BN,EAASH,EAAeD,WAwBtB,gCC5BAW,EAAYvB,YAAY,CAC5BC,KAAM,OACNC,aANuB,CACvBsB,iBAAiB,GAMjBnB,SAAU,CACRoB,MADQ,SACFlB,GACJA,EAAMiB,iBAAkB,GAE1BE,OAJQ,SAIDnB,GACLA,EAAMiB,iBAAkB,MAKjBG,EAAcJ,EAAUT,QAEtBS,IAAf,Q,iBCYeK,EA7BA,WACb,IAAMC,EAASX,aAAY,SAACX,GAAD,OAAWA,EAAMuB,KAAKN,mBAC3CR,EAAWC,cAKjB,OACE,yBAAQE,UAAWC,IAAQW,OAA3B,UACE,4CACCF,GACC,8BACE,+BACE,6BACE,mBAAGG,KAAK,IAAR,2BAEF,6BACE,mBAAGA,KAAK,IAAR,wBAEF,6BACE,wBAAQV,QAhBE,WACpBN,EAASW,EAAYD,WAeX,+B,iBCdCO,EARK,WAClB,OACE,sBAAMd,UAAWC,IAAQc,QAAzB,SACE,oD,gBC0BSC,EA3BF,WACX,IAAMnB,EAAWC,cAOjB,OACE,sBAAME,UAAWC,IAAQU,KAAzB,SACE,kCACE,uBAAMM,SARU,SAACC,GACrBA,EAAEC,iBACFtB,EAASW,EAAYF,UAMjB,UACE,sBAAKN,UAAWC,IAAQmB,QAAxB,UACE,uBAAOC,QAAQ,QAAf,mBACA,uBAAOC,KAAK,QAAQC,GAAG,aAEzB,sBAAKvB,UAAWC,IAAQmB,QAAxB,UACE,uBAAOC,QAAQ,WAAf,sBACA,uBAAOC,KAAK,WAAWC,GAAG,gBAE5B,mDCPKC,MAXf,WACE,IAAMd,EAASX,aAAY,SAACX,GAAD,OAAWA,EAAMuB,KAAKN,mBACjD,OACE,qCACE,cAAC,EAAD,IACCK,EAAS,cAAC,EAAD,IAAkB,cAAC,EAAD,IAC5B,cAAC,EAAD,QCDSe,EAPDC,YAAe,CAC3BC,QAAS,CACP3C,QAAS4C,EACTjB,KAAMkB,KCCGC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH,cAAC,IAAD,CAAUT,MAAOA,EAAjB,SACE,cAAC,EAAD,Q,kBCVJ/C,EAAOC,QAAU,CAAC,KAAO,mBAAmB,QAAU,wB,kBCAtDD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,0B","file":"static/js/main.7947a9ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3mObx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__1BiAu\"};","import { createSlice } from '@reduxjs/toolkit'\n\nconst initialCounterState = {\n  counter: 0,\n  isDisplayed: true,\n}\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++\n    },\n    increase(state, action) {\n      state.counter += action.payload\n    },\n    decrement(state) {\n      state.counter--\n    },\n    toggle(state) {\n      state.isDisplayed = !state.isDisplayed\n    },\n  },\n})\n\nexport const counterActions = counterSlice.actions\n\nexport default counterSlice.reducer\n","import { useDispatch, useSelector } from 'react-redux'\nimport { counterActions } from '../store/counter'\n\nimport classes from './Counter.module.css'\n\nconst Counter = () => {\n  const dispatch = useDispatch()\n  const { counter, isDisplayed } = useSelector((state) => state.counter)\n\n  const toggleCounterHandler = () => {\n    dispatch(counterActions.toggle())\n  }\n\n  const incrementHandler = () => {\n    dispatch(counterActions.increment())\n  }\n\n  const increaseHandler = () => {\n    dispatch(counterActions.increase(5))\n  }\n\n  const decrementHandler = () => {\n    dispatch(counterActions.decrement())\n  }\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      <div className={classes.value}>{isDisplayed && counter}</div>\n      <div>\n        <button onClick={decrementHandler}>- Decrement</button>\n        <button onClick={increaseHandler}>Add 5</button>\n        <button onClick={incrementHandler}>+ Increment</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  )\n}\n\nexport default Counter\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst initialAuthState = {\n  isAuthenticated: false,\n}\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true\n    },\n    logout(state) {\n      state.isAuthenticated = false\n    },\n  },\n})\n\nexport const authActions = authSlice.actions\n\nexport default authSlice.reducer\n","import { useSelector, useDispatch } from 'react-redux'\nimport { authActions } from '../store/auth'\nimport classes from './Header.module.css'\n\nconst Header = () => {\n  const isAuth = useSelector((state) => state.auth.isAuthenticated)\n  const dispatch = useDispatch()\n\n  const logoutHandler = () => {\n    dispatch(authActions.logout())\n  }\n  return (\n    <header className={classes.header}>\n      <h1>Redux Auth</h1>\n      {isAuth && (\n        <nav>\n          <ul>\n            <li>\n              <a href='/'>My Products</a>\n            </li>\n            <li>\n              <a href='/'>My Sales</a>\n            </li>\n            <li>\n              <button onClick={logoutHandler}>Logout</button>\n            </li>\n          </ul>\n        </nav>\n      )}\n    </header>\n  )\n}\n\nexport default Header\n","import classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <main className={classes.profile}>\n      <h2>My User Profile</h2>\n    </main>\n  );\n};\n\nexport default UserProfile;\n","import { useDispatch } from 'react-redux'\nimport { authActions } from '../store/auth'\nimport classes from './Auth.module.css'\n\nconst Auth = () => {\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(authActions.login())\n  }\n\n  return (\n    <main className={classes.auth}>\n      <section>\n        <form onSubmit={submitHandler}>\n          <div className={classes.control}>\n            <label htmlFor='email'>Email</label>\n            <input type='email' id='email' />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='password'>Password</label>\n            <input type='password' id='password' />\n          </div>\n          <button>Login</button>\n        </form>\n      </section>\n    </main>\n  )\n}\n\nexport default Auth\n","import Counter from './components/Counter'\nimport Header from './components/Header'\nimport UserProfile from './components/UserProfile'\nimport Auth from './components/Auth'\nimport { useSelector } from 'react-redux'\n\nfunction App() {\n  const isAuth = useSelector((state) => state.auth.isAuthenticated)\n  return (\n    <>\n      <Header />\n      {isAuth ? <UserProfile /> : <Auth />}\n      <Counter />\n    </>\n  )\n}\n\nexport default App\n","import { configureStore } from '@reduxjs/toolkit'\nimport counterReducer from './counter'\nimport authReducer from './auth'\n\nconst store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    auth: authReducer,\n  },\n})\n\nexport default store\n\n// Before toolkit\n\n// import { createStore } from 'redux'\n\n// const initialState = {\n//   counter: 0,\n//   showCounter: false,\n// }\n\n// const counterReducer = (state = initialState, action) => {\n//   switch (action.type) {\n//     case 'increment':\n//       return { ...state, counter: state.counter + 1 }\n//     case 'decrement':\n//       return { ...state, counter: state.counter - 1 }\n//     case 'toggle':\n//       return { ...state, isDisplayed: !state.isDisplayed }\n//     default:\n//       return state\n//   }\n// }\n\n// const store = createStore(counterReducer)\n\n// export default store\n","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport { Provider } from 'react-redux'\n\nimport './index.css'\nimport App from './App'\nimport store from './store'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"Auth_auth__3QLaR\",\"control\":\"Auth_control__3bkp4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__1U4hj\",\"value\":\"Counter_value__2JpT-\"};"],"sourceRoot":""}